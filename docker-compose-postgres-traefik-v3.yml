networks:
  proxy:
    external: true
  internal:
    external: false

services:
  todo-app-postgres:
    image: uportal/todo-app:latest
    container_name: todoapp-on-postgres-16
    restart: unless-stopped
    environment:
      APP_NAME: Todo App with Postgres 16
      ACTIVE_PROFILES: dev,postgres
      APP_URL: https://todo-on-postgres.example.com # change hostname!
      APP_DB_HOST: todoapp-postgresdb16
      APP_DB_PORT: 5432
      APP_DB_NAME: db
      APP_DB_SCHEMA: todoapp
      APP_DB_USERNAME: todoapp-user
      APP_DB_PASSWORD: todoapp
    networks:
      - internal
      - proxy
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.todo-on-postgres.rule=Host(`todo-on-postgres.example.com`)" # change hostname!
    - "traefik.http.routers.todo-on-postgres.tls=true"
    - "traefik.http.routers.todo-on-postgres.tls.certresolver=lets-encrypt"
    - "traefik.http.routers.todo-on-postgres.entrypoints=websecure"
    - "traefik.http.services.todo-on-postgres.loadbalancer.server.port=8080"
    depends_on:
      todo-postgres16:
        condition: service_healthy

  todo-adminer:
    image: adminer:4.17.1
    container_name: todoapp-adminer-on-postgres
    restart: unless-stopped

    environment:
      ADMINER_DEFAULT_SERVER: todoapp-postgresdb16
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_NAME: db
    networks:
      - internal
      - proxy
    depends_on:
      todo-postgres16:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todo-adminer-postgres.rule=Host(`todo-adminer-postgres.example.com`)" # change hostname!
      - "traefik.http.routers.todo-adminer-postgres.tls=true"
      - "traefik.http.routers.todo-adminer-postgres.tls.certresolver=lets-encrypt"
      - "traefik.http.routers.todo-adminer-postgres.entrypoints=websecure"
      - "traefik.http.services.todo-adminer-postgres.loadbalancer.server.port=8080"

  todo-postgres16:
    image: postgres:16
    container_name: todoapp-postgresdb16
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: "todoapp"
      POSTGRES_USER: "todoapp-user"
      POSTGRES_DB: "db"
      POSTGRES_SCHEMA: "todoapp"
      POSTGRES_PORT: "5432"
    ports:
      # <Port exposed> : < postgres Port running inside container>, host port for using with postgres-workbench or dbeaver
      - '54321:5432'
    networks:
      - internal
    expose:
      # Opens port 5432 on the container
      - '5432'
      # Where our data will be persisted
    volumes:
      - todoapp-dbpostgres16:/var/lib/postgresql/data
      - ./docker-config/postgres/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 60s
      retries: 15

# Names our volume
volumes:
  todoapp-dbpostgres16:
