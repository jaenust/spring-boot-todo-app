
networks:
  proxy:
    external: true
  internal:
    external: false
services:

  todo-app-on-mysql:
    image: uportal/todo-app:latest
    container_name: todoapp-on-mysql-84
    restart: unless-stopped
    environment:
      APP_NAME: Todo App with MySQL
      ACTIVE_PROFILES: dev,mysql
      APP_URL: https://todo-on-mysql.example.com # change hostname!
      APP_DB_HOST: todoapp-mysql84-db
      APP_DB_PORT: 3306
      APP_DB_NAME: todoapp
      APP_DB_USERNAME: root
      APP_DB_PASSWORD: todoapp
    networks:
      - internal
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todo-on-mysql.rule=Host(`todo-on-mysql.example.com`)" # change hostname!
      - "traefik.http.routers.todo-on-mysql.tls=true"
      - "traefik.http.routers.todo-on-mysql.tls.certresolver=lets-encrypt"
      - "traefik.http.routers.todo-on-mysql.entrypoints=websecure"
      - "traefik.http.services.todo-on-mysql.loadbalancer.server.port=8080"
    depends_on:
      todo-dbmysql84:
        condition: service_healthy

  todo-adminer:
    image: adminer:4.17.1
    container_name: todoapp-adminer-on-mysql
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: todoapp-mysql84-db
    networks:
      - internal
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todo-adminer-mysql.rule=Host(`todo-adminer-mysql.example.com`)" # change hostname!
      - "traefik.http.routers.todo-adminer-mysql.tls=true"
      - "traefik.http.routers.todo-adminer-mysql.tls.certresolver=lets-encrypt"
      - "traefik.http.routers.todo-adminer-mysql.entrypoints=websecure"
      - "traefik.http.services.todo-adminer-mysql.loadbalancer.server.port=8080"
    depends_on:
      todo-dbmysql84:
        condition: service_healthy

  todo-dbmysql84:
    image: mysql:8.4.4
    command: mysqld --mysql-native-password=ON
    container_name: todoapp-mysql84-db
    restart: unless-stopped
    cap_add:
      - SYS_NICE
    environment:
      MYSQL_DATABASE: 'todoapp'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'todoapp'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'todoapp'
    ports:
      # <Port exposed> : < MySQL Port running inside container>, host port for using with mysql-workbench or dbeaver
      - '33066:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - todoapp-mysql84-vol:/var/lib/mysql
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 10s
      retries: 20
# Names our volume
volumes:
  todoapp-mysql84-vol:
